name: Website

on:
  push:
    paths:
      - package/website/**
  pull_request:
    branches: [main]

jobs:
  test:
    concurrency:
      group: ${{ github.ref }}-website-test
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm test -w website

  build:
    concurrency:
      group: ${{ github.ref }}-website-build
      cancel-in-progress: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ["development", "production"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Get Pulumi stack output properties
        run: |
          pulumi login s3://pulumi.janfabian.cz
          pulumi stack select ${{ matrix.environment }}
          echo "api_url=$(pulumi stack output backend | jq '.url')" >> $GITHUB_ENV
          echo "frontend_url=$(pulumi stack output website | jq '.url')" >> $GITHUB_ENV
        working-directory: package/cloud
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-central-1
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      - run: npm ci
      - run: npm run -w website build:${{ matrix.environment }}
        env:
          PREACT_PUBLIC_BACKEND_URL: ${{ env.api_url }}
          PREACT_PUBLIC_FRONTEND_URL: ${{ env.frontend_url }}
      - uses: actions/upload-artifact@v2
        with:
          name: website-offtopic-slack-bot-${{ matrix.environment }}
          path: ./package/website/build
          retention-days: 1

  deploy-development:
    concurrency:
      group: deploy-website-development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: ["test", "build"]
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - uses: actions/download-artifact@v2
        with:
          name: website-offtopic-slack-bot-development
          path: ./package/website/build
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Get Pulumi stack output properties
        run: |
          pulumi login s3://pulumi.janfabian.cz
          pulumi stack select development
          echo "s3_bucket=$(pulumi stack output website | jq '.bucketUri')" >> $GITHUB_ENV
          echo "cloudfront_id=$(pulumi stack output website | jq '.cloudFrontId')" >> $GITHUB_ENV
        working-directory: package/cloud
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-central-1
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      - run: |
          aws s3 sync ./package/website/build ${{ env.s3_bucket }} --delete
      - run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.cloudfront_id}} \
            --paths "/*"

  deploy-production:
    concurrency:
      group: deploy-website-production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: ["test", "build"]
    environment:
      name: production
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - uses: actions/download-artifact@v2
        with:
          name: website-offtopic-slack-bot-production
          path: ./package/website/build
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Get Pulumi stack output properties
        run: |
          pulumi login s3://pulumi.janfabian.cz
          pulumi stack select production
          echo "s3_bucket=$(pulumi stack output website | jq '.bucketUri')" >> $GITHUB_ENV
          echo "cloudfront_id=$(pulumi stack output website | jq '.cloudFrontId')" >> $GITHUB_ENV
        working-directory: package/cloud
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-central-1
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      - run: |
          aws s3 sync ./package/website/build ${{ env.s3_bucket }} --delete
      - run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.cloudfront_id}} \
            --paths "/*"
